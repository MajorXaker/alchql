stages:
  - test
  - build
  - deploy

test:
  image: python:3.9
  stage: test

  services:
    - postgres

  except:
    variables:
      - $CI_COMMIT_MESSAGE =~ /hotfix/

  variables:
    PIP_CACHE_DIR: $CI_PROJECT_DIR/.cache/pip
    PIP_DOWNLOAD_CACHE: $CI_PROJECT_DIR/.cache/pip_download_cache

  cache:
    key: ${CI_JOB_NAME}
    paths:
      - .cache

  coverage: '/TOTAL.*\s+(\d+%)$/'

  artifacts:
    reports:
      cobertura: coverage.xml

  before_script:
    - pip install .[test]

  script:
    - coverage run -m pytest
    - coverage report -m --skip-covered
    - coverage xml


black:
  image: python:3.9
  stage: test
  allow_failure: true

  except:
    variables:
      - $CI_COMMIT_MESSAGE =~ /hotfix/

  variables:
    PIP_CACHE_DIR: $CI_PROJECT_DIR/.cache/pip
    PIP_DOWNLOAD_CACHE: $CI_PROJECT_DIR/.cache/pip_download_cache

  cache:
    key: ${CI_JOB_NAME}
    paths:
      - .cache

  script:
    - pip install black==22.1
    - black --version
    - black --check --diff ./


build package:
  image: python:3.9
  stage: build
  only:
    - main
  before_script:
    - pip install twine setuptools wheel
  variables:
    TWINE_USERNAME: gitlab-ci-token
    TWINE_PASSWORD: $CI_JOB_TOKEN
  script:
    - python setup.py sdist bdist_wheel
    - python -m twine upload --verbose --repository-url https://gitlab.com/api/v4/projects/${CI_PROJECT_ID}/packages/pypi dist/*
